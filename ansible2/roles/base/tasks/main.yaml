---
# - name: Update all packages to their latest version
#   ansible.builtin.apt:
#     name: "*"
#     state: latest
#     update_cache: yes

# - name: Install packages
#   ansible.builtin.apt:
#     name:
#       - vim
#       - zip
#       - curl
#       - net-tools
#       - mc
#     state: present

# - name: Install packages
#   ansible.builtin.apt:
#     name: "{{ packages }}"
#     state: present

# - name: Install packages
#   ansible.builtin.apt:
#     name: "{{ item }}"
#     state: present
#   loop:
#     - vim
#     - zip
#     - curl
#     - net-tools
#     - mc

- name: Ensure group "admins" exists
  ansible.builtin.group:
    name: admins
    state: present

- name: Add the user admin with a bash shell, appending the group sudo to the user's groups
  ansible.builtin.user:
    name: "{{ item.0. }}"
    shell: /bin/bash
    groups: "{{ item.1 }}"
    append: yes
    password: $6$sdvfkjLJADS$VWP8ZQm72lgVQJfvHqdvco8p14YthVYILyS5D0BZgBrF1oMv72roGmCwJ5wTfCKJdQWwf8PdxGVaSkG2ui94S/
    state: present
  loop: "{{ q('ansible.builtin.subelements', users, 'groups', {'skip_missing': True}) }}"

- name: Set authorized key taken from file
  ansible.posix.authorized_key:
    user: admin
    state: present
    key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDByinmKztR6HcgoJW6QY2Cy+KutX3uSEChoWrmqtLMFhdRgQNy2f4f47POZYD3w2T6L62d7+xHvmQc4pwWqhotCAAQ1/DkZC3Y7vu1ojLNxBa86m8QOBLnN+cx5Q0YP9Gl6t4KAA1oua8Uvld7GrTOH+R99lNwNh+luQxRhyqkPXShsaAb2DCB9wR+pjz+o7O9u82hmb9gzxMlOSQ+9Vokuv/srD3bnoIfRVLTrNNYkF8wLD31ROwHNOsGHARF6/OMm+WDiKW2ck1eDykVK1N3741A+cRowp4tcJOnCMseD+z8JAKxVqueaKKWs+NjIgcGgdB4+i3+TdoAY42FyGzsoo3Q4YKndLI7sP8DsVXou6bEpk7XDxodaKcWMSvZ0STHi1q4fLIhUDZ75MD2ur3ck+YeJOCKG0sqp7pHcwmXaq++4irEcLOcf5XvTXpXS78qL9le44t2cbLwR8osKZaY3ybKs4nL4fOeElCSR/VePiWnkTA+Wvk6w8hfjEZTq9YRf55kJGFtw9EeWdHIe2m5pmjqtihjYNEHwo+OerTjKvbwLpplZyAWeIsON0b4uW3rAFjcampMiJUKc5vVUMGzKCYGVJsfB7ROZczbZerq3Z0wXBrnLYpc8zj1BAGfClhG6cXQB2Wghwc/QY8UP1YQDXpozn7kPObMIvIWF1ikrQ== root@ubuntu1"

# - name: Template a file to /etc/ssh/sshd_config
#   ansible.builtin.template:
#     src: ssh.j2
#     dest: /etc/ssh/sshd_config
#     owner: root
#     group: root
#     mode: '0644'
#   register: ssh_output

# - name: Print ssh_output
#   debug: var=ssh_output

# - name: Restart service ssh
#   ansible.builtin.systemd:
#     state: restarted
#     name: ssh
#   when: ssh_output.changed == true

# - name: Template a file to /etc/ssh/sshd_config
#   ansible.builtin.template:
#     src: ssh.j2
#     dest: /etc/ssh/sshd_config
#     owner: root
#     group: root
#     mode: '0644'
#   notify: restart ssh

# - name: Aplly handlers
#   meta: flush_handlers

# - name: Ensure group "admins" exists
#   ansible.builtin.group:
#     name: admins
#     state: present

# - name: Template a file to /tmp/hosts
#   ansible.builtin.template:
#     src: hosts.j2
#     dest: /tmp/hosts
#     owner: root
#     group: root
#     mode: '0644'

# - name: Get facts
#   ansible.builtin.setup:
#   register: facts_list

# - name: Print facts_list
#   debug: var=facts_list

- name: Get shell output
  ansible.builtin.shell: ls /etc
  register: shell_output

- name: Print shell_output
  debug: var=shell_output

- name: Do something
  shell: echo {{ item }} >> /tmp/list
  loop: "{{ shell_output.stdout_lines }}"
  when: item | regex_search('^.+\.conf$')
